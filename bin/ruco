#!/usr/bin/env ruby

require "ruco"
require "cocor"
require "fileutils"

if ARGV.length < 1
	puts "Usage: ruco <grammar.ruco> [Grammar Name]"
	exit 1
end

file = ARGV[0]
grammar_name = File.basename file, ".ruco"
grammar_name = ARGV[1] if ARGV[1]
grammar_name = grammar_name.capitalize

rr = Ruco::Ruco.new grammar_name do
	instance_eval(File.read(file), file)
end

File.write("#{grammar_name}.atg",rr.generate_atg)
File.write("#{grammar_name}.hpp",rr.generate_header)
File.write("parse_#{grammar_name}.cpp",rr.generate_libcpp)
File.write("parse_#{grammar_name}.hpp",rr.generate_libhpp)
File.write("Makefile", rr.generate_makefile) unless File.exists? "Makefile"
FileUtils.cp(File.join(Gem.datadir("ruco-cpp"), "picojson", "picojson.h"),"picojson.hpp")

atg = File.join(Dir.pwd, "#{grammar_name}.atg")
datadir = Gem.datadir "ruco-cpp"
puts atg

Cocor.compile atg, datadir, grammar_name.capitalize, "#{Dir.pwd}/"
